# ===--------------------------------------- Compile Flags ---------------------------------------=== #
# Universal environments.
JOBS="8"
JOB_LTO="-flto=${JOBS}"
THIN_LTO="-flto=thin"
MARCH="-march=native"
COMMON_FLAGS="${MARCH} -ftree-vectorize -pipe -O2 -g0c"

# Native GCC LTO environments.
LDFLAGS="-Wl,-O2 -Wl,--as-needed"
GCC_LTO_FLAGS="${JOB_LTO} ${COMMON_FLAGS}"

CFLAGS="${GCC_LTO_FLAGS}"
CXXFLAGS="${GCC_LTO_FLAGS}"
FCFLAGS="${GCC_LTO_FLAGS}"
FFLAGS="${GCC_LTO_FLAGS}"

CC="gcc"
CXX="g++"
LD="ld"
AR="gcc-ar"
AS="as"
NM="gcc-nm"
STRIP="strip"
RANLIB="gcc-ranlib"
OBJCOPY="objcopy"
STRINGS="strings"
OBJDUMP="objdump"
READELF="readelf"
ADDR2LINE="addr2line"

# Rust environments.
RUSTFLAGS="-C target-cpu=native"

# GoLang environments.
GOARCH="amd64"
GOOS="linux"

#CGO_CFLAGS="${CFLAGS}"
#CGO_CXXFLAGS="${CXXFLAGS}"
#CGO_FCFLAGS="${FCFLAGS}"
#CGO_FFLAGS="${FFLAGS}"
#CGO_LDFLAGS="${LDFLAGS}"

# This sets the language of build output to English.
# Please keep this setting intact when reporting bugs.
LC_MESSAGES=C
#LINGUAS="ko"

# Portage environments.
PORTDIR="/var/db/repos/gentoo"
DISTDIR="/var/cache/distfiles"
PKGDIR="/var/cache/binpkgs"

FEATURES="candy"

PORTAGE_IONICE_COMMAND="ionice -c2 -n7 -p \${PID}"
PORTAGE_NICENESS="19"

MAKEOPTS="-j${JOBS} -l7"



# ===--------------------------------------- Emerge Flags ---------------------------------------=== #
# NOTE: This stage was built with the bindist Use flag enabled
ACCEPT_LICENSE="*"

#-- [NECESSARY] elogind -systemd, udev, dbus, policykit, udisks, X
#USE="bluetooth dbus elogind git policykit pulseaudio udev udisks X xinerama -systemd -wayland"

# no-multilib (stable)
CPU_FLAGS_X86="aes avx f16c mmx mmxext pclmul popcnt sse sse2 sse3 sse4_1 sse4_2 sse4a ssse3"
USE="bluetooth cairo cjk clang dbus dri drm elogind exif ffmpeg flac gbm git gpg icu imagemagick imlib jit jpeg libnotify lm-sensors lua52compat lz4 mp3 mtp multicall opengl pic png policykit pulseaudio realtime svg2 text udev udisks v4l vaapi vdpau vector-icons vulkan webp windowmode x264 x265 X xdg xinerama xpm zstd -argon2 -binutils-plugin -branding -cups -doc -gold -graphite -gtk -http -interlaced -libressl -jpeg2k -netifrc -numa -openvz -postscript -qt5 -startup-notification -systemd -uchardet -unwind -utmp -vala -vserver -vte -wayland -webengine -wtmp -wxwidgets"

# Driver use flags
VIDEO_CARDS="amdgpu radeonsi"
INPUT_DEVICES="libinput synaptics"

# dev-lang/lua
LUA_SINGLE_TARGET="luajit"
LUA_TARGETS="luajit"

# app-emulation/qemu
QEMU_SOFTMMU_TARGETS="arm x86_64"
QEMU_USER_TARGETS="x86_64"

# For installing gentoo
GENTOO_MIRRORS="http://ftp.daum.net/gentoo/ http://ftp.kaist.ac.kr/pub/gentoo/ ftp://ftp.kaist.ac.kr/gentoo/ http://ftp.lanet.kr/pub/gentoo/ https://ftp.lanet.kr/pub/gentoo/ ftp://ftp.lanet.kr/pub/gentoo/"
GRUB_PLATFORMS="efi-64"



# ===--------------------------------------- Emerge lists ---------------------------------------=== #
##### (M: menually compile, not by ebuild)
#-- [VIEW] WM
# openbox nitrogen lxappearance obconf obmenu-generator plank(M) tint2 picom dunst

#-- [SYS] System configurations
# xrandr pulseaudio brightnessctl::guru iwd libdrm

#-- [APPS] System apps
# arandr pavucontrol thunar thunar-volman thunar-archive-plugin xfce4-power-manager networkmanager hardinfo

#-- [FONT] System fonts
# jetbrainsmono-nerdfont::guru nanum ibus ibus-libpinyin ibus-hangul

#-- [APPS] User apps
# kitty neovim vscodium viewnior mpv mpd mpc ncmpcpp gimp inkscape
# htop neofetch
